<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on looper梦呓</title>
    <link>https://1004032560.github.io/tags/mysql/</link>
    <description>Recent content in MySQL on looper梦呓</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>[Home](/) &amp;#183; Theme [Simpleness](https://github.com/RainerChiang/simpleness) Powered by [Hugo](https://gohugo.io/)</copyright>
    <lastBuildDate>Mon, 12 Jul 2021 17:36:34 +0800</lastBuildDate><atom:link href="https://1004032560.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【MySQL】数据定义语言DDL</title>
      <link>https://1004032560.github.io/posts/mysql%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80ddl/</link>
      <pubDate>Mon, 12 Jul 2021 17:36:34 +0800</pubDate>
      
      <guid>https://1004032560.github.io/posts/mysql%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80ddl/</guid>
      <description>数据定义语言DDL(Data Definition Language) 对象：数据库和表
关键词：create、alter、drop、truncate(删除当前表再新建一个一模一样的表结构)
1、数据库管理 1.1 创建数据库： # 创建数据库 如果不存在 设置字符集 CREATE DATABASE [IF NOT EXISTS] 库名 [ CHARACTER SET 字符集名]; create database [if not exists] school [character set utf8]; 1.2 修改数据库： # 数据库重命名 RENAME DATABASE 旧库名 TO 新库名; rename database shcool to new_school; # 修改数据库字符集 ALTER DATABASE 库名 CHARACTER SET 字符集名; alter database school character set utf64; 1.3 删除数据库： # 删除数据库 如果存在 drop database [if exists] school; 1.4 切换数据库： use school; 2、表管理 2.</description>
    </item>
    
    <item>
      <title>【MySQL】数据管理语言DML</title>
      <link>https://1004032560.github.io/posts/mysql%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E8%AF%AD%E8%A8%80dml/</link>
      <pubDate>Mon, 12 Jul 2021 17:36:34 +0800</pubDate>
      
      <guid>https://1004032560.github.io/posts/mysql%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E8%AF%AD%E8%A8%80dml/</guid>
      <description>数据管理语言DML(Data Manipulatioin language) 数据管理语言DML(Data Manipulatioin language)</description>
    </item>
    
    <item>
      <title>【MySQL】基础架构</title>
      <link>https://1004032560.github.io/posts/mysql%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Tue, 11 May 2021 15:06:29 +0800</pubDate>
      
      <guid>https://1004032560.github.io/posts/mysql%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/</guid>
      <description>MySQL 可以分为 Server 层和存储引擎层两部分
Server 层包括连接器、查询缓存、分析器、优化器、执行器等，涵盖 MySQL 的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。
而存储引擎层负责数据的存储和提取。其架构模式是插件式的，支持 InnoDB、MyISAM、Memory 等多个存储引擎。现在最常用的存储引擎是 InnoDB，它从 MySQL 5.5.5版本开始成为了默认存储引擎。</description>
    </item>
    
  </channel>
</rss>
